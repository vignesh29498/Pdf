import pdfplumber
import difflib
import pandas as pd

def extract_sentences(pdf_path):
    """Extract sentences from each page and store them with their positions"""
    text_per_page = {}
    with pdfplumber.open(pdf_path) as pdf:
        for page_num, page in enumerate(pdf.pages, start=1):
            text = page.extract_text() or ""
            sentences = [s.strip() for s in text.split(". ") if s.strip()]  # Simple sentence splitting
            text_per_page[page_num] = sentences
    return text_per_page

def overall_pdf_comparison(pdf1_path, pdf2_path, output_csv="pdf_comparison_result.csv"):
    """Compare two PDFs and save deviations in a CSV file"""
    pdf1_text = extract_sentences(pdf1_path)
    pdf2_text = extract_sentences(pdf2_path)

    pdf1_sentences = [(page, idx, sent) for page, sents in pdf1_text.items() for idx, sent in enumerate(sents)]
    pdf2_sentences = [(page, idx, sent) for page, sents in pdf2_text.items() for idx, sent in enumerate(sents)]

    pdf1_sent_list = [sent for _, _, sent in pdf1_sentences]
    pdf2_sent_list = [sent for _, _, sent in pdf2_sentences]

    results = []
    
    # Match sentences using difflib (basic text similarity)
    matcher = difflib.SequenceMatcher(None, pdf1_sent_list, pdf2_sent_list)
    matches = matcher.get_matching_blocks()

    matched_indices = {match.a: match.b for match in matches for i in range(match.size)}

    for i, (sent1_page, sent1_idx, sent1) in enumerate(pdf1_sentences):
        if i in matched_indices:  # If the sentence is matched in PDF2
            matched_idx = matched_indices[i]
            sent2_page, sent2_idx, sent2 = pdf2_sentences[matched_idx]

            # Ignore minor shifts within the same page
            if sent1_page == sent2_page and abs(sent1_idx - sent2_idx) <= 1:
                continue  

            if sent1_page == sent2_page:
                description = "Position swapped within page"
                status = "⚠️ Moved (Reordered)"
            else:
                description = f"Moved to Page {sent2_page}"
                status = "⚠️ Moved (Different Page)"

            results.append([sent1_page, sent1, sent2, description, status])

        else:
            results.append([sent1_page, sent1, "(Not Found)", "Missing in PDF2", "❌ Mismatch"])

    # Find extra sentences in PDF2
    unmatched_pdf2_sentences = set(range(len(pdf2_sentences))) - set(matched_indices.values())
    for idx in unmatched_pdf2_sentences:
        sent2_page, _, sent2 = pdf2_sentences[idx]
        results.append([sent2_page, "(Not Found)", sent2, "Extra in PDF2", "❌ Mismatch"])

    # Convert results to DataFrame and save to CSV
    df = pd.DataFrame(results, columns=["Page Number", "PDF1 Sentence", "PDF2 Sentence", "Description", "Status"])
    df.to_csv(output_csv, index=False)

    print(f"Overall PDF comparison report saved as {output_csv}")

# Example usage
overall_pdf_comparison("sample1.pdf", "sample2.pdf")
